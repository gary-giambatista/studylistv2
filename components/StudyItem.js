import * as React from "react";
import { useEffect, useMemo, useRef, useState } from "react";
import styles from "../styles/Home.module.css";
//import supabase from "../utils/supabase.js";

import Home from "../pages/_app.js";

export default function StudyItem(props) {
	// Props defined
	//index is generated by each <StudyItem/> that is rendered by a user in index.html
	const index = props.index;
	const removeStudyItem = props.removeStudyItem; //a new object is being referenced each time?

	//form state (for each <StudyItem/>)
	const [formData, setFormData] = React.useState({
		id: null,
		created_at: "",
		is_open: false,
		group_name: "",
		group_link: "",
		group_desc: "",
		user_id: null,
	});

	//state functions
	const toggleOpen = () => {
		setFormData((prevFormData) => {
			return {
				...prevFormData,
				is_open: !prevFormData.is_open,
			};
		});
	};
	// useMemo(() => {
	// 	toggleOpen();
	// }, []);

	function updateInput(event) {
		setFormData((prevFormData) => {
			return {
				...prevFormData,
				[event.target.name]: event.target.value,
			};
		});
	}
	//useEffect to only render on [dependency array]
	const isFirstRender = useRef(true);
	useEffect(() => {
		if (isFirstRender.current) {
			isFirstRender.current = false;
			return; // üëàÔ∏è return early if first render
		}
		console.log(
			"is_open: " + JSON.stringify(formData.is_open),
			"index: " + index
		);
	}, [formData.is_open]);

	return (
		<div id={`studyGroupNumber${index}`}>
			<div className={styles.studyListHeaderContainer}>
				<button onClick={toggleOpen}>
					{formData.is_open ? "Close" : "Open"}
				</button>
				<form className={styles.studyGroupName}>
					<input
						name="group_name"
						types="text"
						placeholder="Create a Study Group"
						onChange={updateInput}
						value={formData.studyGroupName}
					/>
				</form>
			</div>

			{formData.is_open ? (
				<div className={styles.studyListItemBody}>
					<form>
						<input
							className={styles.studyListItemBody}
							name="group_link"
							type="text"
							placeholder="Enter a link here"
							onChange={updateInput}
							value={formData.studyItemLink}
						/>
						<textarea
							name="group_desc"
							type="text"
							placeholder="Enter notes here"
							onChange={updateInput}
							value={formData.studyItemNotes}
						/>
					</form>
					<button onClick={() => removeStudyItem(index)}> Remove Item </button>
				</div>
			) : (
				<div></div>
			)}
		</div>
	);
}
